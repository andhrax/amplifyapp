{"ast":null,"code":"var _jsxFileName = \"/Users/andhrax/coding/amplifyapp/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { API } from 'aws-amplify';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport { listNotes } from './graphql/queries';\nimport { createNote as createNoteMutation, deleteNote as deleteNoteMutation } from './graphql/mutations';\nconst initialFormState = {\n  name: '',\n  description: ''\n};\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [formData, setFormData] = useState(initialFormState);\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n  async function fetchNotes() {\n    const apiData = await API.graphql({\n      query: listNotes\n    });\n    setNotes(apiData.data.listNotes.items);\n  }\n\n  async function createNote() {\n    if (!formData.name || !formData.description) return;\n    await API.graphql({\n      query: createNoteMutation,\n      variables: {\n        input: formData\n      }\n    });\n    setNotes([...notes, formData]);\n    setFormData(initialFormState);\n  }\n\n  async function deleteNote({\n    id\n  }) {\n    const newNotesArray = notes.filter(note => note.id !== id);\n    setNotes(newNotesArray);\n    await API.graphql({\n      query: deleteNoteMutation,\n      variables: {\n        input: {\n          id\n        }\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"My Notes App\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setFormData({ ...formData,\n      'name': e.target.value\n    }),\n    placeholder: \"Note name\",\n    value: formData.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setFormData({ ...formData,\n      'description': e.target.value\n    }),\n    placeholder: \"Note description\",\n    value: formData.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: createNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Create Note\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, notes.map(note => /*#__PURE__*/React.createElement(\"div\", {\n    key: note.id || note.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, note.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, note.description), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => deleteNote(note),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Delete note\")))), /*#__PURE__*/React.createElement(AmplifySignOut, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default withAuthenticator(App);","map":{"version":3,"sources":["/Users/andhrax/coding/amplifyapp/src/App.js"],"names":["React","useState","useEffect","API","withAuthenticator","AmplifySignOut","listNotes","createNote","createNoteMutation","deleteNote","deleteNoteMutation","initialFormState","name","description","App","notes","setNotes","formData","setFormData","fetchNotes","apiData","graphql","query","data","items","variables","input","id","newNotesArray","filter","note","e","target","value","marginBottom","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { API } from 'aws-amplify';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport { listNotes } from './graphql/queries';\nimport { createNote as createNoteMutation, deleteNote as deleteNoteMutation } from './graphql/mutations';\n\nconst initialFormState = { name: '', description: '' }\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [formData, setFormData] = useState(initialFormState);\n\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n  async function fetchNotes() {\n    const apiData = await API.graphql({ query: listNotes });\n    setNotes(apiData.data.listNotes.items);\n  }\n\n  async function createNote() {\n    if (!formData.name || !formData.description) return;\n    await API.graphql({ query: createNoteMutation, variables: { input: formData } });\n    setNotes([ ...notes, formData ]);\n    setFormData(initialFormState);\n  }\n\n  async function deleteNote({ id }) {\n    const newNotesArray = notes.filter(note => note.id !== id);\n    setNotes(newNotesArray);\n    await API.graphql({ query: deleteNoteMutation, variables: { input: { id } }});\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>My Notes App</h1>\n      <input\n        onChange={e => setFormData({ ...formData, 'name': e.target.value})}\n        placeholder=\"Note name\"\n        value={formData.name}\n      />\n      <input\n        onChange={e => setFormData({ ...formData, 'description': e.target.value})}\n        placeholder=\"Note description\"\n        value={formData.description}\n      />\n      <button onClick={createNote}>Create Note</button>\n      <div style={{marginBottom: 30}}>\n        {\n          notes.map(note => (\n            <div key={note.id || note.name}>\n              <h2>{note.name}</h2>\n              <p>{note.description}</p>\n              <button onClick={() => deleteNote(note)}>Delete note</button>\n            </div>\n          ))\n        }\n      </div>\n      <AmplifySignOut />\n    </div>\n  );\n}\n\nexport default withAuthenticator(App);"]},"metadata":{},"sourceType":"module"}